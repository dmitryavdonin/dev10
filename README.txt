OTUS. ДЗ 10. Паттерны поддержания консистентности данных (Stream processing)
Дмитрий Авдонин

Реализована событийная модель с использованием брокера сообщений (kafka)

Логика работы:
1. Пользователь создает заказ через REST API запрос в сервис Order
2. Сервис Order формирует заказ со статусом Pending и возвращает ID заказа и статус Pending пользователю.
3. Сервис Order отправляет сообщение в кафку в топик order-created, в котором сообщает ID пользователя, ID заказа и стоимость заказа (price)
4. Сервис Billing читает сообщение из топика order-created и проверяет баланс пользователя. 
4.1 Если денег на заказ хватает, сервис Billing уменьшает баланс пользователя на стоимость заказа и отправляет в кафку в топик payment-status сообщение со статусом success.
4.2 Если денег не хватает, сервис Billing оставляет баланс пользователя без изменений и отправляет в кафку в топик payment-status сообщение со статусом failed и описанием причины в поле reason.
5. Сервис Notification читает сообщения из топика payment-status и отправляет нотификацию пользователю о статусе оплаты заказа (success или failed с причиной в поле reason)
6. Сервис Order читает сообщения из топика payment-status и обновляет статус заказа на success или failed с указанием причины из поля reason
7. Пользователь запрашивает параметры заказа через REST API запрос в сервис Order, в ответ получает информацию о статусе заказа (success или failed с указанием причины из поля reason)